type Quote @model {
  id: ID! @isUnique    # read-only (managed by Graphcool)
  createdAt: DateTime! # read-only (managed by Graphcool)
  updatedAt: DateTime! # read-only (managed by Graphcool)

  author: String!
  authorBirthday: String!
  authorBirthname: String!
  authorBirthplace: String!
  authorOccupation: String!
  authorQuote: String!
  authorCategory: String!

  likedBy: [User!]! @relation(name: "UserLikeQuotes")
  dislikedBy: [User!]! @relation(name: "UserDislikeQuotes")

  likes: Int!
  dislikes: Int!
  imageUrl: String!
  userEmail: String!
}

type Author @model {
    id: ID! @isUnique    # read-only (managed by Graphcool)
    createdAt: DateTime! # read-only (managed by Graphcool)
    updatedAt: DateTime! # read-only (managed by Graphcool)

    author: String!
    authorBirthday: String!
    authorBirthplace: String!
    authorOccupation: String!
    authorCategory: String!
}


type User @model {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!

  email: String!
  givenname: String!
  familyname: String!
  nickname: String!
  name: String!
  picture: String!
  sub: String! @isUnique
  locale: String!

  likeQuotes: [Quote!]! @relation(name: "UserLikeQuotes")
  dislikeQuotes: [Quote!]! @relation(name: "UserDislikeQuotes")

}
